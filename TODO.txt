	// TODO - Add a new RestCallLogger that sends the result to the console.
	TODO: wrapper for httpClient.getState();
	TODO: header() and query() should persist objects that can be converted to strings at runtime.
	
	ContentDisposition header bean.
	StreamResource/ReaderResource classes should take in header beans.
	
	Need the ability to turn on debug in REST via environment variables (e.g. debug=MyServlet.myMethod)
	$Contains{} variable.
	
	
	TODO:  @BeanConfig(bpi) doesn't override @Bean(bpi)?
	

TODO - This isn't working.	
	    public static class InstanceMetrics {
    	public List<SimpleMetric> instance = new ArrayList<>();
    	public Map<Integer,List<SimpleMetric>> racNode = new TreeMap<>();
    	public Map<Integer,List<SimpleMetric>> partition = new TreeMap<>();
    }

    @Bean(bpi="name,value,received")
    @Html(noTableHeaders=true)
    public static class SimpleMetric {
    	public String name;
    	public Long value;
    	public Calendar received;

    	public SimpleMetric(Metric m) {
    		this.name = m.getMetric();
    		this.value = m.getValue();
    		this.received = m.getReceived();
    	}
    }
    
TODO @Beanp(*) isn't working?
    public static class InstanceCopySummary {
    	public String instance;
    	public int total;
    	@Beanp(name="*")
    	public Map<String,Integer> perPartition = new TreeMap<>();

TODO:  Need a SimpleLink(name, uri) again.

TODO:  RestClient should support all languages by default.

TODO:  HTML elements need constructors or create methods.

TODO: Can't serialize a list of A elements correctly.

TODO: Need ability to have <aside> float left/right/top/bottom around contents.

TODO:  Need ability to define action for unauthorized requests (e.g. redirect instead of just return 401).

TODO:  @RestMethod(debug="true") doesn't appear to log messages.

TODO:  @Bean on private class should be treated as bean.

TODO:  HtmlRender should not require no-arg constructor.

TODO:  Tables of this aren't ordered correctly if p is null on first row.
@Bean(bpi="i,p,s,d")
public class BidData {

	public String i;  // Instance name.
	public Integer p; // Partition number.
	public Score s;   // Score.
	public String d;  // Discard reason.

	public BidData(Bid b) {
		this.s = b.getScore();

REST classes should allow themselves to implement helper classes such as call hander etc...

TODO:   ResourceDescriptions needs an append(url, label, description) so you can add params on url.
